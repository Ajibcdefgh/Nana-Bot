Index: nana/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import logging\r\nimport os\r\nimport sys\r\nimport time\r\n\r\nfrom pydrive.auth import GoogleAuth\r\nfrom pyrogram import Client, errors\r\nfrom sqlalchemy import create_engine, exc\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy.orm import sessionmaker, scoped_session\r\n\r\nStartTime = time.time()\r\n\r\n# Postgresql\r\n\r\n# logging\r\n# \r\n# -> Advanced logging, for debugging purposes\r\n\r\n#\r\nENV = bool(os.environ.get('ENV', False))\r\nif ENV:\r\n    TEST_DEVELOP = bool(os.environ.get('TEST_DEVELOP', False))\r\nelse:\r\n    try:\r\n        from nana.config import Development as Config\r\n    except ModuleNotFoundError:\r\n        logging.error(\"You need to place config.py in nana dir!\")\r\n        quit(1)\r\n    TEST_DEVELOP = Config.TEST_MODE\r\n\r\nif TEST_DEVELOP:\r\n    logging.warning(\"Testing mode activated!\")\r\n    log = logging.getLogger()\r\n\r\n# if version < 3.6, stop bot.\r\nif sys.version_info[0] < 3 or sys.version_info[1] < 6:\r\n    logging.error(\"You MUST have a python version of at least 3.6! Multiple features depend on this. Bot quitting.\")\r\n    quit(1)\r\n\r\nUSERBOT_VERSION = \"1.1.1b\"\r\nASSISTANT_VERSION = \"1.1.1b\"\r\n\r\nOFFICIAL_BRANCH = ('master', 'dev', 'asyncio')\r\nREPOSITORY = \"https://github.com/legenhand/Nana-Bot.git\"\r\nRANDOM_STICKERS = [\"CAADAgAD6EoAAuCjggf4LTFlHEcvNAI\", \"CAADAgADf1AAAuCjggfqE-GQnopqyAI\",\r\n                   \"CAADAgADaV0AAuCjggfi51NV8GUiRwI\"]\r\n\r\nBOT_SESSION = \"nana/session/ManageBot\"\r\nAPP_SESSION = \"nana/session/Nana\"\r\n\r\nif ENV:\r\n    # Logger\r\n    logger = os.environ.get('LOGGER', False)\r\n    # Version\r\n    lang_code = os.environ.get('lang_code', \"en\")\r\n    device_model = os.environ.get('device_model', \"PC\")\r\n    app_version = \"\uD83D\uDC9D Nana v{}\".format(USERBOT_VERSION)\r\n    system_version = os.environ.get('system_version', \"Linux\")\r\n\r\n    # Must be filled\r\n    api_id = os.environ.get('api_id', None)\r\n    api_hash = os.environ.get('api_hash', None)\r\n\r\n    # Session\r\n    USERBOT_SESSION = os.environ.get('USERBOT_SESSION', None)\r\n    ASSISTANT_SESSION = os.environ.get('ASSISTANT_SESSION', None)\r\n\r\n    # Required for some features\r\n    # Set temp var for load later\r\n    Owner = 0\r\n    OwnerName = \"\"\r\n    OwnerUsername = \"\"\r\n    BotID = 0\r\n    BotName = \"\"\r\n    BotUsername = \"\"\r\n    # From config\r\n    Command = os.environ.get(\"Command\", \"! . - ^\").split()\r\n    NANA_WORKER = int(os.environ.get('NANA_WORKER', 8))\r\n    ASSISTANT_WORKER = int(os.environ.get('ASSISTANT_WORKER', 2))\r\n\r\n    try:\r\n        TEST_DEVELOP = bool(os.environ.get('TEST_DEVELOP', False))\r\n        if TEST_DEVELOP:\r\n            BOT_SESSION = os.environ.get('BOT_SESSION', None)\r\n            APP_SESSION = os.environ.get('APP_SESSION', None)\r\n        else:\r\n            raise AttributeError\r\n    except AttributeError:\r\n        pass\r\n\r\n    # APIs\r\n    thumbnail_API = os.environ.get('thumbnail_API', None)\r\n    screenshotlayer_API = os.environ.get('screenshotlayer_API', None)\r\n    bitly_token = [os.environ.get('bitly_token', None)]\r\n    gdrive_credentials = os.environ.get('gdrive_credentials', None)\r\n    lydia_api = os.environ.get('lydia_api', None)\r\n    lastfm_api = os.environ.get('lastfm_api', None)\r\n    remove_bg_api = os.environ.get('remove_bg_api', None)\r\n    lastfm_username = os.environ.get('lastfm_username', None)\r\n    HEROKU_API = os.environ.get('HEROKU_API', None)\r\n    # LOADER\r\n    USERBOT_LOAD = os.environ.get(\"USERBOT_LOAD\", \"\").split()\r\n    USERBOT_NOLOAD = os.environ.get(\"USERBOT_NOLOAD\", \"\").split()\r\n    ASSISTANT_LOAD = os.environ.get(\"ASSISTANT_LOAD\", \"\").split()\r\n    ASSISTANT_NOLOAD = os.environ.get(\"ASSISTANT_NOLOAD\", \"\").split()\r\n\r\n    DATABASE_URL = os.environ.get('DATABASE_URL', \"postgres://username:password@localhost:5432/database\")\r\n    ASSISTANT_BOT_TOKEN = os.environ.get('ASSISTANT_BOT_TOKEN', None)\r\n    AdminSettings = [int(x) for x in os.environ.get(\"AdminSettings\", \"\").split()]\r\n    REMINDER_UPDATE = bool(os.environ.get('REMINDER_UPDATE', True))\r\n    TEST_MODE = bool(os.environ.get('TEST_MODE', False))\r\nelse:\r\n    # logger\r\n    logger = Config.LOGGER\r\n    # Version\r\n    lang_code = Config.lang_code\r\n    device_model = Config.device_model\r\n    app_version = \"\uD83D\uDC9D Nana v{}\".format(USERBOT_VERSION)\r\n    system_version = Config.system_version\r\n\r\n    # Must be filled\r\n    api_id = Config.api_id\r\n    api_hash = Config.api_hash\r\n\r\n    # Session\r\n    USERBOT_SESSION = Config.USERBOT_SESSION\r\n    ASSISTANT_SESSION = Config.ASSISTANT_SESSION\r\n    # Required for some features\r\n    # Set temp var for load later\r\n    Owner = 0\r\n    OwnerName = \"\"\r\n    OwnerUsername = \"\"\r\n    BotID = 0\r\n    BotName = \"\"\r\n    BotUsername = \"\"\r\n    # From config\r\n    Command = Config.Command\r\n    NANA_WORKER = Config.NANA_WORKER\r\n    ASSISTANT_WORKER = Config.ASSISTANT_WORKER\r\n\r\n    # APIs\r\n    thumbnail_API = Config.thumbnail_API\r\n    screenshotlayer_API = Config.screenshotlayer_API\r\n    bitly_token = [Config.bitly_token]\r\n    gdrive_credentials = None\r\n    lydia_api = Config.lydia_api\r\n    HEROKU_API = Config.HEROKU_API\r\n    lastfm_api = Config.lastfm_api\r\n    remove_bg_api = Config.remove_bg_api\r\n    lastfm_username = Config.lastfm_username\r\n    # LOADER\r\n    USERBOT_LOAD = Config.USERBOT_LOAD\r\n    USERBOT_NOLOAD = Config.USERBOT_NOLOAD\r\n    ASSISTANT_LOAD = Config.ASSISTANT_LOAD\r\n    ASSISTANT_NOLOAD = Config.ASSISTANT_NOLOAD\r\n\r\n    DATABASE_URL = Config.DATABASE_URL\r\n    ASSISTANT_BOT_TOKEN = Config.ASSISTANT_BOT_TOKEN\r\n    AdminSettings = Config.AdminSettings\r\n    REMINDER_UPDATE = Config.REMINDER_UPDATE\r\n    TEST_MODE = Config.TEST_MODE\r\nif os.path.exists(\"nana/logs/error.log\"):\r\n    f = open(\"nana/logs/error.log\", \"w\")\r\n    f.write(\"PEAK OF THE LOGS FILE\")\r\nLOG_FORMAT = \"[%(asctime)s.%(msecs)03d] %(filename)s:%(lineno)s %(levelname)s: %(message)s\"\r\nlogging.basicConfig(level=logging.ERROR,\r\n                    format=LOG_FORMAT,\r\n                    datefmt='%m-%d %H:%M',\r\n                    filename='nana/logs/error.log',\r\n                    filemode='w')\r\nconsole = logging.StreamHandler()\r\nconsole.setLevel(logging.ERROR)\r\nformatter = logging.Formatter(LOG_FORMAT)\r\nconsole.setFormatter(formatter)\r\nlogging.getLogger('').addHandler(console)\r\n\r\nlog = logging.getLogger()\r\nlog.error(\"THIS IS PEAK OF LOG ERROR, IGNORE THIS MESSAGE LOG\")\r\n\r\nif USERBOT_SESSION and ASSISTANT_SESSION:\r\n    BOT_SESSION = ASSISTANT_SESSION\r\n    APP_SESSION = USERBOT_SESSION\r\n\r\ngauth = GoogleAuth()\r\n\r\nDB_AVAILABLE = False\r\nBOTINLINE_AVAIABLE = False\r\n\r\n\r\n# Postgresql\r\ndef mulaisql() -> scoped_session:\r\n    global DB_AVAILABLE\r\n    engine = create_engine(DATABASE_URL, client_encoding=\"utf8\")\r\n    BASE.metadata.bind = engine\r\n    try:\r\n        BASE.metadata.create_all(engine)\r\n    except exc.OperationalError:\r\n        DB_AVAILABLE = False\r\n        return False\r\n    DB_AVAILABLE = True\r\n    return scoped_session(sessionmaker(bind=engine, autoflush=False))\r\n\r\n\r\nasync def get_bot_inline(bot):\r\n    global BOTINLINE_AVAIABLE\r\n    if setbot:\r\n        try:\r\n            await app.get_inline_bot_results(\"@{}\".format(bot.username), \"test\")\r\n            BOTINLINE_AVAIABLE = True\r\n        except errors.exceptions.bad_request_400.BotInlineDisabled:\r\n            BOTINLINE_AVAIABLE = False\r\n\r\n\r\nasync def get_self():\r\n    global Owner, OwnerName, OwnerUsername, AdminSettings\r\n    getself = await app.get_me()\r\n    Owner = getself.id\r\n    if getself.last_name:\r\n        OwnerName = getself.first_name + \" \" + getself.last_name\r\n    else:\r\n        OwnerName = getself.first_name\r\n    OwnerUsername = getself.username\r\n    if Owner not in AdminSettings:\r\n        AdminSettings.append(Owner)\r\n\r\n\r\nasync def get_bot():\r\n    global BotID, BotName, BotUsername\r\n    getbot = await setbot.get_me()\r\n    BotID = getbot.id\r\n    BotName = getbot.first_name\r\n    BotUsername = getbot.username\r\n\r\n\r\nBASE = declarative_base()\r\nSESSION = mulaisql()\r\n\r\nsetbot = Client(BOT_SESSION, api_id=api_id, api_hash=api_hash, bot_token=ASSISTANT_BOT_TOKEN, workers=ASSISTANT_WORKER,\r\n                test_mode=TEST_MODE)\r\n\r\napp = Client(APP_SESSION, api_id=api_id, api_hash=api_hash, app_version=app_version, device_model=device_model,\r\n             system_version=system_version, lang_code=lang_code, workers=NANA_WORKER, test_mode=TEST_MODE)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- nana/__init__.py	(revision 82ba9a472aee451d5ffa1fcd5913fc650cb3a299)
+++ nana/__init__.py	(date 1593506837116)
@@ -2,6 +2,8 @@
 import os
 import sys
 import time
+import requests
+import json
 
 from pydrive.auth import GoogleAuth
 from pyrogram import Client, errors
@@ -160,6 +162,12 @@
     AdminSettings = Config.AdminSettings
     REMINDER_UPDATE = Config.REMINDER_UPDATE
     TEST_MODE = Config.TEST_MODE
+    os.environ["SPOTIPY_CLIENT_ID"] = Config.CLIENT_ID_SPOTIFY
+    os.environ["SPOTIPY_CLIENT_SECRET"] = Config.CLIENT_SECRET_SPOTIFY
+    os.environ["SPOTIPY_REDIRECT_URI"] = "https://example.com/callback"
+    CLIENT_ID_SPOTIFY = Config.CLIENT_ID_SPOTIFY
+    CLIENT_SECRET_SPOTIFY = Config.CLIENT_SECRET_SPOTIFY
+    USERNAME_SPOTIFY = Config.SPOTIFY_USERNAME
 if os.path.exists("nana/logs/error.log"):
     f = open("nana/logs/error.log", "w")
     f.write("PEAK OF THE LOGS FILE")
@@ -236,6 +244,21 @@
 BASE = declarative_base()
 SESSION = mulaisql()
 
+# Spotify Startup
+
+# Check if initial token exists and CLIENT_ID_SPOTIFY given
+if not os.path.exists("./nana/session/database_spotify.json") and Config.CLIENT_ID_SPOTIFY:
+    INITIAL_BIO = ""
+    body = {"client_id": Config.CLIENT_ID_SPOTIFY, "client_secret": Config.CLIENT_SECRET_SPOTIFY,
+            "grant_type": "authorization_code", "redirect_uri": "https://example.com/callback",
+            "code": Config.SPOTIFY_INITIAL_TOKEN}
+    r = requests.post("https://accounts.spotify.com/api/token", data=body)
+    save = r.json()
+    to_create = {'bio': INITIAL_BIO, 'access_token': save['access_token'], 'refresh_token': save['refresh_token'],
+                 'telegram_spam': False, 'spotify_spam': False}
+    with open('./nana/session/database_spotify.json', 'w+') as outfile:
+        json.dump(to_create, outfile, indent=4, sort_keys=True)
+
 setbot = Client(BOT_SESSION, api_id=api_id, api_hash=api_hash, bot_token=ASSISTANT_BOT_TOKEN, workers=ASSISTANT_WORKER,
                 test_mode=TEST_MODE)
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"17821370-a063-4fef-a4ab-7bdf43e17c3b\" name=\"Default Changelist\" comment=\"Merge branch 'pokurt-master'&#10;&#10;# Conflicts:&#10;#&#9;nana/modules/pm.py\">\n      <change beforePath=\"$PROJECT_DIR$/nana/__init__.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/nana/__init__.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/nana/assistant/inline.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/nana/assistant/inline.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/nana/config.example.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/nana/config.example.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/nana/modules/pm.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/nana/modules/pm.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1aD2Tmu6Z1a4S2UJzKaoHuksWlr\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/nana\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settings.ide.settings.notifications\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/nana\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"Nana-Bot\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/venv/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/nana\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SvnConfiguration\">\n    <configuration />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"17821370-a063-4fef-a4ab-7bdf43e17c3b\" name=\"Default Changelist\" comment=\"\" />\n      <created>1586255854334</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1586255854334</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Fix : lydia now working properly\">\n      <created>1586259018064</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1586259018064</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Fix : disapprovepm now working properly\">\n      <created>1592501134325</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1592501134325</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"3\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Fix : lydia now working properly\" />\n    <MESSAGE value=\"Fix : disapprovepm now working properly\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fix : disapprovepm now working properly\" />\n  </component>\n  <component name=\"WindowStateProjectService\">\n    <state x=\"147\" y=\"0\" width=\"1071\" height=\"729\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1592639319122\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state x=\"147\" y=\"0\" width=\"1071\" height=\"729\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1366.729@0.0.1366.729\" timestamp=\"1592639319122\" />\n    <state x=\"321\" y=\"0\" key=\"CommitChangelistDialog2\" timestamp=\"1592639214693\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state x=\"321\" y=\"0\" key=\"CommitChangelistDialog2/0.0.1366.729/1366.0.1366.768@0.0.1366.729\" timestamp=\"1592501133560\" />\n    <state x=\"321\" y=\"0\" key=\"CommitChangelistDialog2/0.0.1366.729@0.0.1366.729\" timestamp=\"1592639214693\" />\n    <state x=\"470\" y=\"123\" key=\"FileChooserDialogImpl\" timestamp=\"1586257231871\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state x=\"470\" y=\"123\" key=\"FileChooserDialogImpl/0.0.1366.729@0.0.1366.729\" timestamp=\"1586257231871\" />\n    <state width=\"1343\" height=\"223\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1592501228465\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state width=\"1343\" height=\"223\" key=\"GridCell.Tab.0.bottom/0.0.1366.729/1366.0.1366.768@0.0.1366.729\" timestamp=\"1592501228465\" />\n    <state width=\"1343\" height=\"148\" key=\"GridCell.Tab.0.bottom/0.0.1366.729@0.0.1366.729\" timestamp=\"1586259532898\" />\n    <state width=\"1343\" height=\"148\" key=\"GridCell.Tab.0.bottom/0.0.2732.729@0.0.2732.729\" timestamp=\"1586277639780\" />\n    <state width=\"1343\" height=\"223\" key=\"GridCell.Tab.0.center\" timestamp=\"1592501228464\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state width=\"1343\" height=\"223\" key=\"GridCell.Tab.0.center/0.0.1366.729/1366.0.1366.768@0.0.1366.729\" timestamp=\"1592501228464\" />\n    <state width=\"1343\" height=\"148\" key=\"GridCell.Tab.0.center/0.0.1366.729@0.0.1366.729\" timestamp=\"1586259532896\" />\n    <state width=\"1343\" height=\"148\" key=\"GridCell.Tab.0.center/0.0.2732.729@0.0.2732.729\" timestamp=\"1586277639779\" />\n    <state width=\"1343\" height=\"223\" key=\"GridCell.Tab.0.left\" timestamp=\"1592501228464\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state width=\"1343\" height=\"223\" key=\"GridCell.Tab.0.left/0.0.1366.729/1366.0.1366.768@0.0.1366.729\" timestamp=\"1592501228464\" />\n    <state width=\"1343\" height=\"148\" key=\"GridCell.Tab.0.left/0.0.1366.729@0.0.1366.729\" timestamp=\"1586259532896\" />\n    <state width=\"1343\" height=\"148\" key=\"GridCell.Tab.0.left/0.0.2732.729@0.0.2732.729\" timestamp=\"1586277639778\" />\n    <state width=\"1343\" height=\"223\" key=\"GridCell.Tab.0.right\" timestamp=\"1592501228464\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state width=\"1343\" height=\"223\" key=\"GridCell.Tab.0.right/0.0.1366.729/1366.0.1366.768@0.0.1366.729\" timestamp=\"1592501228464\" />\n    <state width=\"1343\" height=\"148\" key=\"GridCell.Tab.0.right/0.0.1366.729@0.0.1366.729\" timestamp=\"1586259532897\" />\n    <state width=\"1343\" height=\"148\" key=\"GridCell.Tab.0.right/0.0.2732.729@0.0.2732.729\" timestamp=\"1586277639779\" />\n    <state x=\"309\" y=\"119\" width=\"728\" height=\"489\" key=\"MultipleFileMergeDialog\" timestamp=\"1592639051594\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state x=\"309\" y=\"119\" width=\"728\" height=\"489\" key=\"MultipleFileMergeDialog/0.0.1366.729@0.0.1366.729\" timestamp=\"1592639051594\" />\n    <state x=\"184\" y=\"0\" key=\"SettingsEditor\" timestamp=\"1592496393117\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state x=\"184\" y=\"0\" key=\"SettingsEditor/0.0.1366.729/1366.0.1366.768@0.0.1366.729\" timestamp=\"1592496393117\" />\n    <state x=\"184\" y=\"0\" key=\"SettingsEditor/0.0.1366.729@0.0.1366.729\" timestamp=\"1586256275299\" />\n    <state x=\"283\" y=\"97\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1592501139883\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state x=\"283\" y=\"97\" key=\"Vcs.Push.Dialog.v2/0.0.1366.729/1366.0.1366.768@0.0.1366.729\" timestamp=\"1592501139883\" />\n    <state x=\"283\" y=\"97\" key=\"Vcs.Push.Dialog.v2/0.0.1366.729@0.0.1366.729\" timestamp=\"1586259023547\" />\n    <state x=\"351\" y=\"193\" key=\"com.intellij.ide.util.TipDialog\" timestamp=\"1586255887560\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state x=\"351\" y=\"193\" key=\"com.intellij.ide.util.TipDialog/0.0.1366.729@0.0.1366.729\" timestamp=\"1586255887560\" />\n    <state x=\"481\" y=\"280\" width=\"416\" height=\"174\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1592639246535\">\n      <screen x=\"0\" y=\"0\" width=\"1366\" height=\"729\" />\n    </state>\n    <state x=\"481\" y=\"280\" width=\"404\" height=\"169\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1366.729/1366.0.1366.768@0.0.1366.729\" timestamp=\"1592408504608\" />\n    <state x=\"481\" y=\"280\" width=\"416\" height=\"174\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1366.729@0.0.1366.729\" timestamp=\"1592639246535\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 82ba9a472aee451d5ffa1fcd5913fc650cb3a299)
+++ .idea/workspace.xml	(date 1593878443010)
@@ -1,20 +1,61 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="BranchesTreeState">
+    <expand>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:dependabot" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:dependabot" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:pip" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:upstream" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </expand>
+    <select />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="17821370-a063-4fef-a4ab-7bdf43e17c3b" name="Default Changelist" comment="Merge branch 'pokurt-master'&#10;&#10;# Conflicts:&#10;#&#9;nana/modules/pm.py">
+    <list default="true" id="17821370-a063-4fef-a4ab-7bdf43e17c3b" name="Default Changelist" comment="Fix : lydia now working properly">
+      <change afterPath="$PROJECT_DIR$/nana/modules/spotify.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/nana/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/nana/__init__.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/nana/assistant/inline.py" beforeDir="false" afterPath="$PROJECT_DIR$/nana/assistant/inline.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/nana/config.example.py" beforeDir="false" afterPath="$PROJECT_DIR$/nana/config.example.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/nana/modules/pm.py" beforeDir="false" afterPath="$PROJECT_DIR$/nana/modules/pm.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Python Script" />
+      </list>
+    </option>
+  </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="ProjectId" id="1aD2Tmu6Z1a4S2UJzKaoHuksWlr" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
@@ -25,6 +66,7 @@
   <component name="PropertiesComponent">
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="Python" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$/nana" />
     <property name="settings.editor.selected.configurable" value="reference.settings.ide.settings.notifications" />
   </component>
@@ -48,6 +90,27 @@
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <option name="SCRIPT_NAME" value="$PROJECT_DIR$/nana" />
       <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="nana" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
+      <module name="Nana-Bot" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="$PROJECT_DIR$/venv/bin/python" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/nana" />
+      <option name="PARAMETERS" value="python3 -m" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
       <option name="MODULE_MODE" value="false" />
@@ -81,52 +144,88 @@
       <option name="project" value="LOCAL" />
       <updated>1592501134325</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="Fix : lydia now working properly">
+      <created>1592902693460</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1592902693460</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
+    <MESSAGE value="Fix : disapprovepm now working properly" />
     <MESSAGE value="Fix : lydia now working properly" />
-    <MESSAGE value="Fix : disapprovepm now working properly" />
-    <option name="LAST_COMMIT_MESSAGE" value="Fix : disapprovepm now working properly" />
+    <option name="LAST_COMMIT_MESSAGE" value="Fix : lydia now working properly" />
   </component>
   <component name="WindowStateProjectService">
-    <state x="147" y="0" width="1071" height="729" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1592639319122">
+    <state x="147" y="0" width="1071" height="729" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1592840979240">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
+    <state x="147" y="0" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1592840979240" />
     <state x="147" y="0" width="1071" height="729" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1366.729@0.0.1366.729" timestamp="1592639319122" />
+    <state x="391" y="157" key="#com.intellij.fileTypes.FileTypeChooser" timestamp="1593350968176">
+      <screen x="0" y="0" width="1366" height="729" />
+    </state>
+    <state x="391" y="157" key="#com.intellij.fileTypes.FileTypeChooser/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1593350968176" />
+    <state x="421" y="114" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1593351004618">
+      <screen x="0" y="0" width="1366" height="729" />
+    </state>
+    <state x="421" y="114" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1593351004618" />
     <state x="321" y="0" key="CommitChangelistDialog2" timestamp="1592639214693">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
     <state x="321" y="0" key="CommitChangelistDialog2/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1592501133560" />
     <state x="321" y="0" key="CommitChangelistDialog2/0.0.1366.729@0.0.1366.729" timestamp="1592639214693" />
+    <state x="117" y="200" width="1166" height="529" maximized="true" key="DiffContextDialog" timestamp="1592818596186">
+      <screen x="0" y="0" width="1366" height="729" />
+    </state>
+    <state x="117" y="200" width="1166" height="529" maximized="true" key="DiffContextDialog/0.0.1366.729@0.0.1366.729" timestamp="1592818596186" />
     <state x="470" y="123" key="FileChooserDialogImpl" timestamp="1586257231871">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
     <state x="470" y="123" key="FileChooserDialogImpl/0.0.1366.729@0.0.1366.729" timestamp="1586257231871" />
-    <state width="1343" height="223" key="GridCell.Tab.0.bottom" timestamp="1592501228465">
+    <state width="1343" height="178" key="GridCell.Tab.0.bottom" timestamp="1593878123932">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
-    <state width="1343" height="223" key="GridCell.Tab.0.bottom/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1592501228465" />
-    <state width="1343" height="148" key="GridCell.Tab.0.bottom/0.0.1366.729@0.0.1366.729" timestamp="1586259532898" />
-    <state width="1343" height="148" key="GridCell.Tab.0.bottom/0.0.2732.729@0.0.2732.729" timestamp="1586277639780" />
-    <state width="1343" height="223" key="GridCell.Tab.0.center" timestamp="1592501228464">
+    <state width="1343" height="178" key="GridCell.Tab.0.bottom/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1593878123932" />
+    <state width="1343" height="178" key="GridCell.Tab.0.bottom/0.0.1366.729/1366.0.1366.768@1366.0.1366.768" timestamp="1592961541172" />
+    <state width="1343" height="178" key="GridCell.Tab.0.bottom/0.0.1366.729@0.0.1366.729" timestamp="1593512124396" />
+    <state width="1343" height="178" key="GridCell.Tab.0.bottom/0.0.2732.729@0.0.2732.729" timestamp="1593552388501" />
+    <state width="1343" height="178" key="GridCell.Tab.0.center" timestamp="1593878123931">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
-    <state width="1343" height="223" key="GridCell.Tab.0.center/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1592501228464" />
-    <state width="1343" height="148" key="GridCell.Tab.0.center/0.0.1366.729@0.0.1366.729" timestamp="1586259532896" />
-    <state width="1343" height="148" key="GridCell.Tab.0.center/0.0.2732.729@0.0.2732.729" timestamp="1586277639779" />
-    <state width="1343" height="223" key="GridCell.Tab.0.left" timestamp="1592501228464">
+    <state width="1343" height="178" key="GridCell.Tab.0.center/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1593878123931" />
+    <state width="1343" height="178" key="GridCell.Tab.0.center/0.0.1366.729/1366.0.1366.768@1366.0.1366.768" timestamp="1592961541172" />
+    <state width="1343" height="178" key="GridCell.Tab.0.center/0.0.1366.729@0.0.1366.729" timestamp="1593512124392" />
+    <state width="1343" height="178" key="GridCell.Tab.0.center/0.0.2732.729@0.0.2732.729" timestamp="1593552388500" />
+    <state width="1343" height="178" key="GridCell.Tab.0.left" timestamp="1593878123931">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
-    <state width="1343" height="223" key="GridCell.Tab.0.left/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1592501228464" />
-    <state width="1343" height="148" key="GridCell.Tab.0.left/0.0.1366.729@0.0.1366.729" timestamp="1586259532896" />
-    <state width="1343" height="148" key="GridCell.Tab.0.left/0.0.2732.729@0.0.2732.729" timestamp="1586277639778" />
-    <state width="1343" height="223" key="GridCell.Tab.0.right" timestamp="1592501228464">
+    <state width="1343" height="178" key="GridCell.Tab.0.left/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1593878123931" />
+    <state width="1343" height="178" key="GridCell.Tab.0.left/0.0.1366.729/1366.0.1366.768@1366.0.1366.768" timestamp="1592961541171" />
+    <state width="1343" height="178" key="GridCell.Tab.0.left/0.0.1366.729@0.0.1366.729" timestamp="1593512124391" />
+    <state width="1343" height="178" key="GridCell.Tab.0.left/0.0.2732.729@0.0.2732.729" timestamp="1593552388500" />
+    <state width="1343" height="178" key="GridCell.Tab.0.right" timestamp="1593878123931">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
-    <state width="1343" height="223" key="GridCell.Tab.0.right/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1592501228464" />
-    <state width="1343" height="148" key="GridCell.Tab.0.right/0.0.1366.729@0.0.1366.729" timestamp="1586259532897" />
-    <state width="1343" height="148" key="GridCell.Tab.0.right/0.0.2732.729@0.0.2732.729" timestamp="1586277639779" />
+    <state width="1343" height="178" key="GridCell.Tab.0.right/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1593878123931" />
+    <state width="1343" height="178" key="GridCell.Tab.0.right/0.0.1366.729/1366.0.1366.768@1366.0.1366.768" timestamp="1592961541172" />
+    <state width="1343" height="178" key="GridCell.Tab.0.right/0.0.1366.729@0.0.1366.729" timestamp="1593512124395" />
+    <state width="1343" height="178" key="GridCell.Tab.0.right/0.0.2732.729@0.0.2732.729" timestamp="1593552388501" />
     <state x="309" y="119" width="728" height="489" key="MultipleFileMergeDialog" timestamp="1592639051594">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
@@ -136,19 +235,39 @@
     </state>
     <state x="184" y="0" key="SettingsEditor/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1592496393117" />
     <state x="184" y="0" key="SettingsEditor/0.0.1366.729@0.0.1366.729" timestamp="1586256275299" />
-    <state x="283" y="97" key="Vcs.Push.Dialog.v2" timestamp="1592501139883">
+    <state x="283" y="97" width="800" height="535" key="Vcs.Push.Dialog.v2" timestamp="1592902699224">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
     <state x="283" y="97" key="Vcs.Push.Dialog.v2/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1592501139883" />
-    <state x="283" y="97" key="Vcs.Push.Dialog.v2/0.0.1366.729@0.0.1366.729" timestamp="1586259023547" />
+    <state x="283" y="97" width="800" height="535" key="Vcs.Push.Dialog.v2/0.0.1366.729@0.0.1366.729" timestamp="1592902699224" />
     <state x="351" y="193" key="com.intellij.ide.util.TipDialog" timestamp="1586255887560">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
     <state x="351" y="193" key="com.intellij.ide.util.TipDialog/0.0.1366.729@0.0.1366.729" timestamp="1586255887560" />
-    <state x="481" y="280" width="416" height="174" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1592639246535">
+    <state x="340" y="27" width="676" height="674" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser" timestamp="1593875372109">
       <screen x="0" y="0" width="1366" height="729" />
     </state>
-    <state x="481" y="280" width="404" height="169" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1592408504608" />
+    <state x="340" y="27" width="676" height="674" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1593875372109" />
+    <state x="481" y="280" width="406" height="173" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1593878442976">
+      <screen x="0" y="0" width="1366" height="729" />
+    </state>
+    <state x="481" y="280" width="406" height="173" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1593878442976" />
     <state x="481" y="280" width="416" height="174" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1366.729@0.0.1366.729" timestamp="1592639246535" />
+    <state x="388" y="87" width="590" height="612" key="find.popup" timestamp="1593509637429">
+      <screen x="0" y="0" width="1366" height="729" />
+    </state>
+    <state x="388" y="87" width="590" height="554" key="find.popup/0.0.1366.729/1366.0.1366.768@0.0.1366.729" timestamp="1593352426528" />
+    <state x="388" y="87" width="590" height="612" key="find.popup/0.0.1366.729@0.0.1366.729" timestamp="1593509637429" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
+          <url>file://$PROJECT_DIR$/nana/modules/spotify.py</url>
+          <line>213</line>
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
 </project>
\ No newline at end of file
Index: nana/modules/spotify.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- nana/modules/spotify.py	(date 1593878114339)
+++ nana/modules/spotify.py	(date 1593878114339)
@@ -0,0 +1,295 @@
+# This module ported from https://github.com/muhammedfurkan/Spotify-Telegram-Bio-Updater
+# Ported By : Legenhand
+from pyrogram import Filters
+
+from nana import app, Command, setbot, Owner, log, CLIENT_ID_SPOTIFY, CLIENT_SECRET_SPOTIFY
+from pyrogram.errors import FloodWait, AboutTooLong
+import asyncio
+import requests
+import json
+
+__MODULE__ = "spotify"
+__HELP__ = """
+"""
+
+
+# The key which is used to determine if the current bio was generated from the bot ot from the user. This means:
+# NEVER use whatever you put here in your original bio. NEVER. Don't do it!
+KEY = '🎶'
+# The bios MUST include the key. The bot will go though those and check if they are beneath telegrams character limit.
+BIOS = [KEY + ' Now Playing: {interpret} - {title} {progress}/{duration}',
+        KEY + ' Now Playing: {interpret} - {title}',
+        KEY + ' : {interpret} - {title}',
+        KEY + ' Now Playing: {title}',
+        KEY + ' : {title}']
+
+# Mind that some characters (e.g. emojis) count more in telegram more characters then in python. If you receive an
+# AboutTooLongError and get redirected here, you need to increase the offset. Check the special characters you either
+# have put in the KEY or in one of the BIOS with an official Telegram App and see how many characters they actually
+# count, then change the OFFSET below accordingly. Since the standard KEY is one emoji and I don't have more emojis
+# anywhere, it is set to one (One emoji counts as two characters, so I reduce 1 from the character limit).
+OFFSET = 1
+# reduce the OFFSET from our actual 70 character limit
+LIMIT = 70 - OFFSET
+
+spotify_bio_status = False
+
+@app.on_message(Filters.me & Filters.command(["sp"], Command))
+async def spotify(_, message):
+    global spotify_bio_status
+    if spotify_bio_status:
+        spotify_bio_status = False
+        message.edit("Spotify Bio Updater is disabled!")
+    else:
+        spotify_bio_status = True
+        await spotify_bio()
+        message.edit("Current Spotify playback will update in bio")
+
+
+def ms_converter(millis):
+    millis = int(millis)
+    seconds = (millis / 1000) % 60
+    seconds = int(seconds)
+    if str(seconds) == '0':
+        seconds = '00'
+    if len(str(seconds)) == 1:
+        seconds = '0' + str(seconds)
+    minutes = (millis / (1000 * 60)) % 60
+    minutes = int(minutes)
+    return str(minutes) + ":" + str(seconds)
+
+
+class Database:
+    def __init__(self):
+        try:
+            self.db = json.load(open("./nana/session/database_spotify.json"))
+        except FileNotFoundError:
+            print("File Not Found")
+
+    def save_token(self, token):
+        self.db["access_token"] = token
+        self.save()
+
+    def save_refresh(self, token):
+        self.db["refresh_token"] = token
+        self.save()
+
+    def save_bio(self, bio):
+        self.db["bio"] = bio
+        self.save()
+
+    def save_spam(self, which, what):
+        self.db[which + "_spam"] = what
+
+    def return_token(self):
+        return self.db["access_token"]
+
+    def return_refresh(self):
+        return self.db["refresh_token"]
+
+    def return_bio(self):
+        return self.db["bio"]
+
+    def return_spam(self, which):
+        return self.db[which + "_spam"]
+
+    def save(self):
+        with open('./nana/session/database_spotify.json', 'w') as outfile:
+            json.dump(self.db, outfile, indent=4, sort_keys=True)
+
+
+database = Database()
+
+# to stop unwanted spam, we sent these type of message only once. So we have a variable in our database which we check
+# for in return_info. When we send a message, we set this variable to true. After a successful update
+# (or a closing of spotify), we reset that variable to false.
+
+
+def save_spam(which, what):
+    # see below why
+
+    # this is if False is inserted, so if spam = False, so if everything is good.
+    if not what:
+        # if it wasn't normal before, we proceed
+        if database.return_spam(which):
+            # we save that it is normal now
+            database.save_spam(which, False)
+            # we return True so we can test against it and if it this function returns, we can send a fitting message
+            return True
+    # this is if True is inserted, so if spam = True, so if something went wrong
+    else:
+        # if it was normal before, we proceed
+        if not database.return_spam(which):
+            # we save that it is not normal now
+            database.save_spam(which, True)
+            # we return True so we can send a message
+            return True
+    # if True wasn't returned before, we can return False now so our test fails and we dont send a message
+    return False
+
+async def spotify_bio():
+    global spotify_bio_status
+    while spotify_bio_status:
+        # SPOTIFY
+        skip = False
+        to_insert = {}
+        oauth = {
+            "Authorization": "Bearer " + database.return_token()}
+        r = requests.get('https://api.spotify.com/v1/me/player/currently-playing', headers=oauth)
+        # 200 means user plays smth
+        if r.status_code == 200:
+            received = r.json()
+            if received["currently_playing_type"] == "track":
+                to_insert["title"] = received["item"]["name"]
+                to_insert["progress"] = ms_converter(received["progress_ms"])
+                to_insert["interpret"] = received['item']["artists"][0]["name"]
+                to_insert["duration"] = ms_converter(received["item"]["duration_ms"])
+                if save_spam("spotify", False):
+                    stringy = "**[INFO]**\n\nEverything returned back to normal, the previous spotify issue has been " \
+                              "resolved."
+                    await setbot.send_message(Owner, stringy)
+            else:
+                if save_spam("spotify", True):
+                    # currently item is not passed when the user plays a podcast
+                    string = f"**[INFO]**\n\nThe playback {received['currently_playing_type']} didn't gave me any " \
+                        f"additional information, so I skipped updating the bio."
+                    await setbot.send_message(Owner, string)
+        # 429 means flood limit, we need to wait
+        elif r.status_code == 429:
+            to_wait = r.headers['Retry-After']
+            log.error(f"Spotify, have to wait for {str(to_wait)}")
+            await setbot.send_message(Owner, f'**[WARNING]**\n\nI caught a spotify api limit. I shall sleep for '
+                                           f'{str(to_wait)} seconds until I refresh again')
+            skip = True
+            await asyncio.sleep(int(to_wait))
+        # 204 means user plays nothing, since to_insert is false, we dont need to change anything
+        elif r.status_code == 204:
+            if save_spam("spotify", False):
+                stringy = "**[INFO]**\n\nEverything returned back to normal, the previous spotify issue has been " \
+                          "resolved."
+                await setbot.send_message(Owner, stringy)
+            pass
+        # 401 means our access token is expired, so we need to refresh it
+        elif r.status_code == 401:
+            data = {"client_id": CLIENT_ID_SPOTIFY, "client_secret": CLIENT_SECRET_SPOTIFY,
+                    "grant_type": "refresh_token",
+                    "refresh_token": database.return_refresh()}
+            r = requests.post("https://accounts.spotify.com/api/token", data=data)
+            received = r.json()
+            # if a new refresh is token as well, we save it here
+            try:
+                database.save_refresh(received["refresh_token"])
+            except KeyError:
+                pass
+            database.save_token(received["access_token"])
+            # since we didnt actually update our status yet, lets do this without the 30 seconds wait
+            skip = True
+        # 502 means bad gateway, its an issue on spotify site which we can do nothing about. 30 seconds wait shouldn't
+        # put too much pressure on the spotify server, so we are just going to notify the user once
+        elif r.status_code == 502:
+            if save_spam("spotify", True):
+                string = f"**[WARNING]**\n\nSpotify returned a Bad gateway, which means they have a problem on their " \
+                    f"servers. The bot will continue to run but may not update the bio for a short time."
+                await setbot.send_message(Owner, string)
+        # 503 means service unavailable, its an issue on spotify site which we can do nothing about. 30 seconds wait
+        # shouldn't put too much pressure on the spotify server, so we are just going to notify the user once
+        elif r.status_code == 503:
+            if save_spam("spotify", True):
+                string = f"**[WARNING]**\n\nSpotify said that the service is unavailable, which means they have a " \
+                         f"problem on their servers. The bot will continue to run but may not update the bio for a " \
+                         f"short time."
+                await setbot.send_message(Owner, string)
+        # 404 is a spotify error which isn't supposed to happen (since our URL is correct). Track the issue here:
+        # https://github.com/spotify/web-api/issues/1280
+        elif r.status_code == 404:
+            if save_spam("spotify", True):
+                string = f"**[INFO]**\n\nSpotify returned a 404 error, which is a bug on their side."
+                await setbot.send_message(Owner, string)
+        # catch anything else
+        else:
+            await setbot.send_message(Owner, '**[ERROR]**\n\nOK, so something went reeeally wrong with spotify. The bot '
+                                           'was stopped.\nStatus code: ' + str(r.status_code) + '\n\nText: ' + r.text)
+            log.error(f"Spotify, error {str(r.status_code)}, text: {r.text}")
+            # stop the whole program since I dont know what happens here and this is the safest thing we can do
+            spotify_bio_status = False
+        # TELEGRAM
+        try:
+            # full needed, since we dont get a bio with the normal request
+            full = await app.get_chat(Owner)
+            bio = full.description
+            # to_insert means we have a successful playback
+            if to_insert:
+                # putting our collected information's into nice variables
+                title = to_insert["title"]
+                interpret = to_insert["interpret"]
+                progress = to_insert["progress"]
+                duration = to_insert["duration"]
+                # we need this variable to see if actually one of the bios is below the character limit
+                new_bio = ""
+                global BIOS, LIMIT
+                for bio in BIOS:
+                    temp = bio.format(title=title, interpret=interpret, progress=progress, duration=duration)
+                    # we try to not ignore for telegrams character limit here
+                    if len(temp) < LIMIT:
+                        # this is short enough, so we put it in the variable and break our for loop
+                        new_bio = temp
+                        break
+                # if we have a bio, one bio was short enough
+                if new_bio:
+                    # test if the user changed his bio to blank, we save it before we override
+                    if not bio:
+                        database.save_bio(bio)
+                    # test if the user changed his bio in the meantime, if yes, we save it before we override
+                    elif "🎶" not in bio:
+                        database.save_bio(bio)
+                    # test if the bio isn't the same, otherwise updating it would be stupid
+                    if not new_bio == bio:
+                        try:
+                            await app.update_profile(bio=new_bio)
+                            if save_spam("telegram", False):
+                                stringy = "**[INFO]**\n\nEverything returned back to normal, the previous telegram " \
+                                          "issue has been resolved."
+                                await setbot.send_message(Owner, stringy)
+                        # this can happen if our LIMIT check failed because telegram counts emojis twice and python
+                        # doesnt. Refer to the constants file to learn more about this
+                        except AboutTooLong:
+                            if save_spam("telegram", True):
+                                stringy = f'**[WARNING]**\n\nThe biography I tried to insert was too long. In order ' \
+                                    f'to not let that happen again in the future, please read the part about OFFSET ' \
+                                    f'in the constants. Anyway, here is the bio I tried to insert:\n\n{new_bio}'
+                                await setbot.send_message(Owner, stringy)
+                # if we dont have a bio, everything was too long, so we tell the user that
+                if not new_bio:
+                    if save_spam("telegram", True):
+                        to_send = f"**[INFO]**\n\nThe current track exceeded the character limit, so the bio wasn't " \
+                            f"updated.\n\n Track: {title}\nInterpret: {interpret}"
+                        await setbot.send_message(Owner, to_send)
+            # not to_insert means no playback
+            else:
+                if save_spam("telegram", False):
+                    stringy = "**[INFO]**\n\nEverything returned back to normal, the previous telegram issue has " \
+                              "been resolved."
+                    await setbot.send_message(Owner, stringy)
+                old_bio = database.return_bio()
+                # this means the bio is blank, so we save that as the new one
+                if not bio:
+                    database.save_bio(bio)
+                # this means an old playback is in the bio, so we change it back to the original one
+                elif "🎶" in bio:
+                    await app.update_profile(bio=database.return_bio())
+                # this means a new original is there, lets save it
+                elif not bio == old_bio:
+                    database.save_bio(bio)
+                # this means the original one we saved is still valid
+                else:
+                    pass
+        except FloodWait as e:
+            to_wait = [int(s) for s in str(e).split() if s.isdigit()]
+            log.error(f"to wait for {str(to_wait[0])}")
+            await setbot.send_message(Owner, f'**[WARNING]**\n\nI caught a telegram api limit. I shall sleep '
+                                           f'{str(to_wait[0])} seconds until I refresh again')
+            skip = True
+            await asyncio.sleep(int(to_wait[0]))
+        # skip means a flood error stopped the whole program, no need to wait another 10 seconds after that
+        if not skip:
+            await asyncio.sleep(1)
\ No newline at end of file
